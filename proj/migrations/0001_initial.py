# Generated by Django 3.2.2 on 2024-03-23 10:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import proj.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('scope', models.TextField()),
                ('date_inserted', models.DateTimeField(auto_now_add=True)),
                ('date_last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('A', 'Section A'), ('B', 'Section B'), ('C', 'Section C'), ('D', 'Section D')], default='A', max_length=1)),
                ('year_of_joining', models.CharField(max_length=4)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proj.branch')),
                ('gauth', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='who', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('schedule_after', models.DateTimeField(default=proj.models.get_now)),
                ('deadline', models.DateTimeField(default=proj.models.get_now_with_hour)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(default='01:00:00')),
                ('is_important', models.BooleanField(default=False)),
                ('is_fixed', models.BooleanField(default=False)),
                ('has_intrest', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False)),
                ('event_id', models.CharField(blank=True, max_length=200, null=True)),
                ('created_by', models.ManyToManyField(related_name='tasks', to='proj.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('S', 'Section Level'), ('B', 'Branch Level'), ('C', 'College Level')], default='S', max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('scheduled', models.DateTimeField(blank=True, null=True)),
                ('users', models.ManyToManyField(related_name='announcements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
